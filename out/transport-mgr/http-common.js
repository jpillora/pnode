// Generated by CoffeeScript 1.6.3
var pkg, types, util, _;

_ = require('../../vendor/lodash');

pkg = require('../../package.json');

util = require('util');

types = {
  http: require('http'),
  https: require('https')
};

exports.createServer = function(emitter, type, listenArgs, serverArgs) {
  var hostname, port, s;
  hostname = typeof listenArgs[1] === 'string' ? listenArgs[1] : '0.0.0.0';
  port = listenArgs[0];
  emitter.emit('uri', "" + type + "://" + hostname + ":" + port);
  emitter.emit('binding');
  s = types[type].createServer.apply(null, serverArgs);
  s.on('request', function(read, write) {
    return emitter.emit('stream', read, write);
  });
  s.listen.apply(s, listenArgs);
  s.once('listening', function() {
    emitter.emit('bound');
    return emitter.once('unbind', function() {
      emitter.emit('unbinding');
      return s.close();
    });
  });
  s.once('close', function() {
    return emitter.emit('unbound');
  });
};

exports.createClient = function(emitter, type, reqArgs, extraOpts) {
  var opts, write;
  if (extraOpts == null) {
    extraOpts = {};
  }
  opts = {
    path: '/' + pkg.name,
    headers: {
      'user-agent': pkg.name + '/' + pkg.version,
      'transfer-encoding': 'chunked',
      'expect': '100-continue'
    }
  };
  _.merge(opts, extraOpts);
  if (typeof reqArgs[0] === 'number') {
    opts.port = reqArgs.shift();
  } else {
    throw new Error("bind " + type + " error: missing port");
  }
  if (typeof reqArgs[0] === 'string') {
    opts.hostname = reqArgs.shift();
  }
  emitter.emit('uri', "" + type + "://" + (opts.hostname || 'localhost') + ":" + opts.port);
  emitter.emit('binding');
  write = types[type].request(opts, function(read) {
    emitter.once('unbind', function() {
      emitter.emit('unbinding');
      return read.socket.end();
    });
    read.once('end', function() {
      return emitter.emit('unbound');
    });
    emitter.emit('read', read);
    emitter.emit('bound');
  });
  emitter.emit('write', write);
};

/*
//@ sourceMappingURL=http-common.map
*/
