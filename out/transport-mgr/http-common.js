// Generated by CoffeeScript 1.6.3
var http, https, pkg, util, _;

_ = require('../../vendor/lodash');

pkg = require('../../package.json');

util = require('util');

http = require('http');

https = require('https');

exports.createServer = function(callback, pserver, type, listenArgs, serverArgs) {
  var hostname, port, s;
  s = (type === 'https' ? https : http).createServer.apply(null, serverArgs);
  s.listen.apply(s, listenArgs);
  hostname = typeof listenArgs[1] === 'string' ? listenArgs[1] : '0.0.0.0';
  port = listenArgs[0];
  s.once('listening', function() {
    return callback({
      uri: "" + type + "://" + hostname + ":" + port,
      unbind: function(cb) {
        return s.close(cb);
      }
    });
  });
};

exports.createClient = function(pclient, type, reqArgs, extraOpts) {
  var opts, uri;
  if (extraOpts == null) {
    extraOpts = {};
  }
  opts = {
    path: '/' + pkg.name,
    headers: {
      'user-agent': pkg.name + '/' + pkg.version,
      'transfer-encoding': 'chunked',
      'expect': '100-continue'
    }
  };
  _.merge(opts, extraOpts);
  if (typeof reqArgs[0] === 'number') {
    opts.port = reqArgs.shift();
  } else {
    pclient.err("bind " + type + " error: missing port");
  }
  if (typeof reqArgs[0] === 'string') {
    opts.hostname = reqArgs.shift();
  }
  uri = "" + type + "://" + (opts.hostname || 'localhost') + ":" + opts.port;
  pclient.createConnection(function(callback) {
    var write;
    write = (type === 'https' ? https : http).request(opts);
    write.once('response', function(read) {
      callback({
        read: read,
        unbind: function(cb) {
          read.socket.once('end', cb);
          return read.socket.end();
        }
      });
    });
    callback({
      uri: uri,
      write: write
    });
  });
};

/*
//@ sourceMappingURL=http-common.map
*/
