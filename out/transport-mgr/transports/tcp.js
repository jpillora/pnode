// Generated by CoffeeScript 1.6.3
var net,
  __slice = [].slice;

net = require('net');

exports.bindServer = function() {
  var args, emitter, s;
  emitter = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
  emitter('uri', "tcp://" + (typeof args[1] === 'string' && args[1] || '0.0.0.0') + ":" + args[0]);
  emitter.emit('binding');
  s = net.createServer();
  s.on('connnection', function(stream) {
    return emitter.emit('stream', stream);
  });
  s.listen.apply(s, args);
  s.once('listening', function() {
    emitter.emit('bound');
    return emitter.once('unbind', function() {
      emitter.emit('unbinding');
      return s.close();
    });
  });
  s.once('close', function() {
    return emitter.emitter('unbound');
  });
};

exports.bindClient = function() {
  var args, emitter, uri;
  emitter = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
  uri = "tcp://" + (typeof args[1] === 'string' && args[1] || 'localhost') + ":" + args[0];
  pclient.createConnection(function() {
    var stream;
    emitter.emit('uri', uri);
    emitter.emit('binding');
    stream = net.connect.apply(null, args);
    emitter.emit('stream', stream);
    stream.once('connect', function() {
      return emitter.emit('bound');
    });
    emitter.once('unbind', function() {
      emitter.emit('unbinding');
      return stream.end();
    });
    return stream.once('end', function() {
      return emitter.emitter('unbound');
    });
  });
};

/*
//@ sourceMappingURL=tcp.map
*/
