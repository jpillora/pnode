// Generated by CoffeeScript 1.6.3
var Base, Client, LocalPeer, Server;

Base = require('./base');

Server = require('./server/server');

Client = require('./client/client');

LocalPeer = require('./peer/local-peer');

try {
  require('source-map-support').install();
} catch (_error) {}

exports.addTransport = require('./transport-mgr').add;

exports.client = function(opts) {
  return new Client(opts);
};

exports.server = function(opts) {
  return new Server(opts);
};

exports.peer = function(opts) {
  return new LocalPeer(opts);
};

exports.install = function(plugin) {
  var err;
  err = function(msg) {
    return console.warn("pnode: Cannot install plugin: " + msg);
  };
  if (typeof plugin !== 'object') {
    return err("must be an object");
  }
  if (typeof plugin.name !== 'string') {
    return err("must have a string 'name' property");
  }
  if (typeof plugin.fn !== 'function') {
    return err("must have a function 'fn' property");
  }
  if (Base.prototype[plugin.name] !== void 0) {
    return err("property '" + plugin.name + "' already exists on the prototype");
  }
  Base.prototype[plugin.name] = plugin.fn;
  return true;
};

exports.helper = require('./helper');

/*
//@ sourceMappingURL=index.map
*/
